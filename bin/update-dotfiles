#!/bin/bash
set -e

# {{{
# Print the progress and heading
PROGRESS=0
PROGRESS_TOTAL=4
progress() {
    PROGRESS=$(($PROGRESS + 1))
    echo -e "\033[0;32m[$PROGRESS/$PROGRESS_TOTAL] $1\033[0;0m"
}

# Print a command and then run it
print_run() {
    echo -e "\033[0;36m>> $1\033[0;0m"
    eval "$1"
}
# }}}
# Check for our dependencies {{{
progress "Checking for dependencies"

command -v find || {
	echo "Please install find"
	depExit=1
}

command -v git || {
	echo "Please install git"
	depExit=1
}

if [ ! -z "$depExit" ]; then
	exit 1
fi
# }}}
# Update repo and tmp {{{
progress "Pulling"
if [ -z "$NO_PULL" ]; then
	cd ~/dotfiles
	current_revision="$(sha1sum bin/update-dotfiles)"
	print_run "git checkout -f master"
	print_run "git pull"
	chmod +x ~/dotfiles/bin/*
	
	if [ "$current_revision" != "$(sha1sum bin/update-dotfiles)" ]; then
		exec ~/dotfiles/bin/update-dotfiles
	fi
	
	if [ -d .tmux/plugins/tpm ]; then
		pushd .tmux/plugins/tmp
		git pull
		popd
	else
		git clone https://github.com/tmux-plugins/tpm .tmux/plugins/tmp
	fi
else
	echo "Not pulling because the env var NO_PULL is set"
fi
# }}}
# Install links {{{
cd ~/dotfiles
progress "Installing symlinks"

KEEP_DOTFILES=1 ~/dotfiles/bin/cleanup-dotfiles >/dev/null

for file in $(ls -1a | tail -n $(($(ls -1a | wc -l) - 2)) | fgrep -v .git | fgrep -v bin | fgrep -v README.md); do
    if [ -f ~/$file ]; then
        print_run "mv ~/$file ~/$file.bak"
    fi

    ln -s ~/dotfiles/$file ~/$file
done

mkdir -p ~/bin

for file in $(ls -1 bin); do
    if [ -f ~/bin/$file ]; then
        echo "Moving existing bin/$file to bin/$file.bak"
        mv ~/bin/$file ~/bin/$file.bak
    fi

    ln -s ~/dotfiles/bin/$file ~/bin/$file
done
# }}}
# Install app plugins {{{
progress "Installing app plugins"

command -v tmux >/dev/null && {
	export TMUX_PLUGIN_MANAGER_PATH="$HOME/.tmux/plugins/"
	~/.tmux/plugins/tpm/scripts/install_plugins.sh
} || echo "Tmux not found. skipping."

command -v wget >/dev/null && hasWget=1
command -v curl >/dev/null && hasCurl=1
plugReady=1

if [ ! -z "$hasWget" ]; then
	mkdir -p ~/.vim/autoload
		wget -qO ~/.vim/autoload/plug.vim \
	    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
elif [ ! -z "$hasCurl" ]; then
	curl -s -fLo ~/.vim/autoload/plug.vim --create-dirs \
			https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
else
	echo "Could not find curl or wget. skipping vim."
	unset plugReady
fi

if [ ! -z "$plugReady" ] && command -v vim >/dev/null; then
	vim +PlugInstall +qall 2>/dev/tty >/dev/tty </dev/tty
else
	echo "Vim not found. skipping."
fi
# }}}
