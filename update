#!/bin/bash

# Print the progress and heading
PROGRESS=0
PROGRESS_TOTAL=8
progress() {
    PROGRESS=$(($PROGRESS + 1))
    echo "[$PROGRESS/$PROGRESS_TOTAL] $1"
}

# Determine which package manager this system uses
package_manager() {
    for manager in "apt-get"; do
        which $manager >/dev/null
        if [ $? -eq 0 ]; then
            echo $manager
            return
        fi
    done
}

# Show the install message
install_msg() {
    echo "The following programs are required $DEPS_NEEDED"
    
    if [ "$1" == "-r" ]; then
        echo "Either install them manually and run ~/dotfiles/update or run ~/dotfiles/update as root"
    else
        echo "Install them manually and run ~/dotfiles/update"
    fi

    exit 1
}

# Check for our dependencies
DEPS_NEEDED=
progress "Checking for and installing dependencies"

for dep in "vim" "tmux" "find" "curl" "git"; do
    which $dep >/dev/null
    if [ $? -eq 1 ]; then
        if [ -z "$DEPS_NEEDED" ]; then
            DEPS_NEEDED="$dep"
        else
            DEPS_NEEDED="$DEPS_NEEDED, $dep"
        fi
    fi
done

# Install deps if root or tell the user if to do it
if [ ! -z "$DEPS_NEEDED" ]; then
    if [ $EUID -eq 0 ]; then
        case "$(package_manager)" in
            apt-get)
                apt-get update
                apt-get install -y $(echo $DEPS_NEEDED | sed 's/,//')
                ;;

            *)
                install_msg
                ;;
        esac
    else
        install_msg -r
    fi
fi

# Update repo and submodules
progress "Pulling"
cd ~/dotfiles
# git checkout master -f
git pull

progress "Updating submodules"
git submodule init
git submodule update

# Remove old symlinks
progress "Removing old links"
cd ~
for link in $(find . -type l -not -path './dotfiles/*'); do
    if [ ! -z "$(readlink $link | fgrep dotfiles)" ]; then
        rm -rf $link
    fi
done

# Install new links
cd ~/dotfiles
progress "Installing symlinks"

for file in $(ls -1a | tail -n $(($(ls -1a | wc -l) - 2)) | fgrep -v .git | fgrep -v bin | fgrep -v README.md); do
    if [ -f ~/$file ]; then
        echo "Moving existing $file to $file.bak"
        mv ~/$file ~/$file.bak
    fi

    ln -s ~/dotfiles/$file ~/$file
done

mkdir -p ~/bin

for file in $(ls -1 bin); do
    if [ -f ~/bin/$file ]; then
        echo "Moving existing bin/$file to bin/$file.bak"
        mv ~/bin/$file ~/bin/$file.bak
    fi

    ln -s ~/dotfiles/bin/$file ~/bin/$file
done

# Install app plugins
progress "Installing tmux plugins"

tmux new-session -s "Dot" -n "Update" ~/.tmux/plugins/tpm/scripts/install_plugins.sh

progress "Installing vim plugins"

vim +PluginInstall +qall

progress "Configuring git"

git config --global user.name "Ryan Ray"
git config --global user.email "ryan314r@gmail.com"